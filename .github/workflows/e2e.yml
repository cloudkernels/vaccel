name: Test e2e vAccel

on:
  # When a PR on main is opened
  pull_request:
    branches:
      - main
    paths:
      - agent
      - bindings
      - conf
      - firecracker
      - plugins
      - scripts/build_rootfs.sh
      - scripts/create_tap.sh
      - scripts/test_virtio.sh
      - scripts/test_vsock.sh
      - '!scripts/**'
      - vaccel-grpc
      - vaccelrt
      - virtio-accel
      - .github/workflows/e2e.yml

  # When something gets pushed to main
  push:
    branches:
      - main
    paths:
      - agent
      - bindings
      - conf
      - firecracker
      - plugins
      - scripts/build_rootfs.sh
      - scripts/create_tap.sh
      - scripts/test_virtio.sh
      - scripts/test_vsock.sh
      - '!scripts/**'
      - vaccel-grpc
      - vaccelrt
      - virtio-accel
      - .github/workflows/e2e.yml
    tags:
      - v*

  # Manually
  workflow_dispatch:

jobs:
  prepare:
    runs-on: [self-hosted]
    outputs:
      vaccelrt_sha: ${{ steps.vars.outputs.vaccelrt_sha }}
      firecracker_sha: ${{ steps.vars.outputs.firecracker_sha }}
      virtio_accel_sha: ${{ steps.vars.outputs.virtio_accel_sha }}
      vsock_plugin_sha: ${{ steps.vars.outputs.vsock_plugin_sha }}
      virtio_plugin_sha: ${{ steps.vars.outputs.virtio_plugin_sha }}
      jetson_plugin_sha: ${{ steps.vars.outputs.jetson_plugin_sha }}
      agent_sha: ${{ steps.vars.outputs.agent_sha }}

    steps:
    - name: Cleanup previous runs
      run: |
        sudo rm -rf ${{ github.workspace }}/*
        sudo rm -rf ${{ github.workspace }}/.??*

    - uses: actions/checkout@v2

    - name: Setup vars
      id: vars
      run: |
        echo "::set-output name=vaccelrt_sha::$(git ls-tree ${{ github.sha }} | grep vaccelrt | awk '{print $3}')"
        echo "::set-output name=firecracker_sha::$(git ls-tree ${{ github.sha }} | grep firecracker | awk '{print $3}')"
        echo "::set-output name=virtio_accel_sha::$(git ls-tree ${{ github.sha }} | grep virtio-accel | awk '{print $3}')"
        echo "::set-output name=vsock_plugin_sha::$(git ls-tree ${{ github.sha }} plugins/vaccelrt-plugin-vsock | awk '{print $3}')"
        echo "::set-output name=virtio_plugin_sha::$(git ls-tree ${{ github.sha }} plugins/vaccelrt-plugin-virtio | awk '{print $3}')"
        echo "::set-output name=jetson_plugin_sha::$(git ls-tree ${{ github.sha }} plugins/vaccelrt-plugin-jetson | awk '{print $3}')"
        echo "::set-output name=agent_sha::$(git ls-tree ${{ github.sha }} agent | awk '{print $3}')"

  test:
    needs: prepare
    runs-on: [self-hosted, cloud, "${{ matrix.arch }}" ]
    env:
      NBFC_S3_ACCESS: ${{ secrets.AWS_ACCESS_KEY }}
      NBFC_S3_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      VACCELRT_SHA: ${{needs.prepare.outputs.vaccelrt_sha}}
      FIRECRACKER_SHA: ${{ needs.prepare.outputs.firecracker_sha }}
      VIRTIO_SHA: ${{ needs.prepare.outputs.virtio_accel_sha }}
      VIRTIO_PLUGIN_SHA: ${{ needs.prepare.outputs.virtio_plugin_sha }}
      VSOCK_PLUGIN_SHA: ${{ needs.prepare.outputs.vsock_plugin_sha }}
      AGENT_SHA: ${{ needs.prepare.outputs.agent_sha }}
      JOB_TYPE: ${{ matrix.build_type }}
      ARCH: ${{ matrix.arch }}

    strategy:
      matrix:
        build_type: [Debug, Release]
        arch: [x86_64, aarch64]
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - name: Find SHA
      run: |
        # If we are in a PR, use the name of the branch that we want to merge,
        # otherwise "main" or tag name
        if [[ "${{github.event.pull_request.head.sha}}" != "" ]]
        then
          echo "ARTIFACT_NAME=$(echo ${{github.event.pull_request.head.ref}})" >> $GITHUB_ENV
        else
          echo "ARTIFACT_NAME=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
        fi

        tail $GITHUB_ENV

    - name: Install packages
      run: |
        sudo apt update && sudo apt install -y \
          subversion coreutils rsync iproute2 libfdt-dev pigz

    - name: Setup vars
      id: vars
      run: |
        echo "::set-output name=firecracker_build_type::$(echo ${{ matrix.build_type }} | awk '{print tolower($0)}')"
        echo "::set-output name=agent_build_type::$(echo ${{ matrix.build_type }} | awk '{print tolower($0)}')"
        echo "::set-output name=uid::$(id -u)"
        echo "::set-output name=gid::$(id -g)"

    - name: Fetch vaccelrt
      uses: cloudkernels/minio-download@v2
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        local-path: /github/workspace/artifacts/opt/
        remote-path: nbfc-assets/github/vaccelrt/${{env.VACCELRT_SHA}}/${{env.ARCH}}/${{ env.JOB_TYPE }}/opt/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}


    - name: Fetch Firecracker
      uses: cloudkernels/minio-download@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/firecracker/${{ env.FIRECRACKER_SHA }}/${{env.ARCH}}/${{ steps.vars.outputs.firecracker_build_type }}/firecracker
        local-path: /github/workspace/artifacts/opt/bin/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Fetch vmlinux
      uses: cloudkernels/minio-download@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/virtio-accel/${{ env.VIRTIO_SHA }}/${{env.ARCH}}/linux/vmlinux
        local-path: /github/workspace/artifacts/opt/share/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Fetch virtio module
      uses: cloudkernels/minio-download@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/virtio-accel/${{ env.VIRTIO_SHA }}/${{env.ARCH}}/linux/virtio_accel.ko
        local-path: /github/workspace/artifacts/opt/share/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Fetch virtio-plugin
      uses: cloudkernels/minio-download@v2
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        local-path: /github/workspace/artifacts/opt/lib/
        remote-path: nbfc-assets/github/virtio-plugin/${{env.VIRTIO_PLUGIN_SHA}}/${{env.ARCH}}/${{ env.JOB_TYPE }}/libvaccel-virtio.so
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Fetch vsock-plugin
      uses: cloudkernels/minio-download@v2
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        local-path: /github/workspace/artifacts/opt/lib/
        remote-path: nbfc-assets/github/vsock-plugin/${{env.VSOCK_PLUGIN_SHA}}/${{env.ARCH}}/${{ env.JOB_TYPE }}/libvaccel-vsock.so
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Fetch vAccel Agent
      uses: cloudkernels/minio-download@v2
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        local-path: /github/workspace/artifacts/opt/bin/
        remote-path: nbfc-assets/github/vaccel-agent/${{env.AGENT_SHA}}/${{env.ARCH}}/${{ steps.vars.outputs.agent_build_type }}/vaccelrt-agent
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Fetch Firecracker root file system
      uses: cloudkernels/minio-download@v2
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{secrets.AWS_ACCESS_KEY}}
        secret-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        local-path: /github/workspace/artifacts/opt/share/
        remote-path: nbfc-assets/github/fc_rootfs/master/${{matrix.arch}}/rootfs.img.gz
      env:
        ACTION_UID: ${{steps.vars.outputs.uid}}
        ACTION_GID: ${{steps.vars.outputs.gid}}

    - name: Create rootfs
      run: |
        # We need this because downloading from s3 messes up with
        # file permissions
        chmod u+x ${{ github.workspace }}/artifacts/opt/bin/*
        pigz -d ${{ github.workspace }}/artifacts/opt/share/rootfs.img.gz
        sudo ./scripts/build_rootfs.sh \
                --build_dir /tmp/rootfs_build \
                --install_prefix ${{ github.workspace }}/artifacts/opt \
                --base_image "ubuntu:latest" \
                --dockerfiles_path "$(pwd)/dockerfiles" \
                install_vaccel

    - name: Create tap interface
      run: sudo ./scripts/create_tap.sh tapTestFc 172.42.0.1/24

    - name: Launch Firecracker
      working-directory: ${{ github.workspace }}/artifacts/opt
      run: |
        sudo rm -f fc.sock
        sudo VACCEL_BACKENDS=${{ github.workspace }}/artifacts/opt/lib/libvaccel-noop.so \
          LD_LIBRARY_PATH=${{ github.workspace }}/artifacts/opt/lib:/usr/local/lib:/usr/lib \
          VACCEL_DEBUG_LEVEL=4 \
          ./bin/firecracker \
            --api-sock fc.sock \
            --config-file ${{ github.workspace }}/conf/config_vaccel.json \
            --seccomp-level 0 &

    - name: Test Firecracker is up
      run: ping -c 20 172.42.0.2

    - name: Test Firecracker ssh
      timeout-minutes: 2
      shell: bash {0}
      run: |
        while true
        do
          name=$(ssh -o StrictHostKeyChecking=no root@172.42.0.2 hostname -s)
          if [[ $name == "vaccel-guest" ]]; then exit 0; fi
        done
        exit 1

    - name: Test virtio-accel
      run: ./scripts/test_virtio.sh

    - name: Test vsock plugin
      run: |
        sudo LD_LIBRARY_PATH=${{ github.workspace }}/artifacts/opt/lib \
          ./scripts/test_vsock.sh \
            -p ${{ github.workspace }}/artifacts/opt/lib/libvaccel-noop.so \
            --agent-prefix ${{ github.workspace }}/artifacts/opt/bin

    - name: Stop Firecracker
      timeout-minutes: 1
      shell: bash {0}
      run: |
        ssh -o StrictHostKeyChecking=no root@172.42.0.2 reboot
        # Wait for it to actually die
        sleep 10
        sync

    - name: Pack workflow artifact
      working-directory: ${{ github.workspace }}/artifacts/opt
      run: |
        cp ${{github.workspace}}/conf/{config_virtio_accel.json,config_vsock.json} share/
        tar --use-compress-program="pigz -k --best" \
            -cf ${{github.workspace}}/vaccel_${{matrix.arch}}_${{matrix.build_type}}.tar.gz \
            bin/ include/ lib/ \
            share/config_virtio_accel.json share/config_vsock.json \
            share/rootfs.img share/virtio_accel.ko share/vmlinux \
            share/vaccel.pc

    - name: Upload artifact to s3
      uses: cloudkernels/minio-upload@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/vaccel/${{ env.ARTIFACT_NAME }}/
        local-path: /github/workspace/vaccel_${{matrix.arch}}_${{matrix.build_type}}.tar.gz

    - name: Cleanup run
      if: ${{ always() }}
      run: |
        sudo rm -rf ${{ github.workspace }}/*
        sudo rm -rf ${{ github.workspace }}/.??*
        sudo rm -f /tmp/vaccel.sock*
        sudo rm -rf /tmp/rootfs_build
        agent_pid=$(ps aux | grep -m 1 [v]accelrt-agent | awk '{print $2}')
        while true
        do
          agent_pid=$(ps aux | grep -m 1 [v]accelrt-agent | awk '{print $2}')
          if [[ $agent_pid == "" ]]; then break; fi
          echo "Killing vAccel agent (pid: $agent_pid)"
          sudo kill -9 $agent_pid
          # Wait for it to actually die
          sleep 2
        done
        sudo ip tuntap del tapTestFc mode tap

  invoke_create_release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: [self-hosted]

    steps:
    - name: Get tag name
      uses: olegtarasov/get-tag@v2.1
      id: tagName

    - name: Invoke workflow
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: "Create vAccel release"
        token: ${{secrets.GITHUB_TOKEN}}
        ref: ${{steps.tagName.outputs.tag}}
        inputs: '{ "tag": "${{steps.tagName.outputs.tag}}" }'
