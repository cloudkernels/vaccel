name: Test e2e vAccel

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  prepare:
    runs-on: [cloud]
    outputs:
      vaccelrt_sha: ${{ steps.vars.outputs.vaccelrt_sha }}
      firecracker_sha: ${{ steps.vars.outputs.firecracker_sha }}
      virtio_accel_sha: ${{ steps.vars.outputs.virtio_accel_sha }}

    steps:
    - name: Cleanup previous runs
      run: |
        sudo rm -rf ${{ github.workspace }}/*
        sudo rm -rf ${{ github.workspace }}/.??*

    - uses: actions/checkout@v2

    - name: Setup vars
      id: vars
      run: |
        echo "::set-output name=vaccelrt_sha::$(git ls-tree ${{ github.sha }} | grep vaccelrt | awk '{print $3}')"
        echo "::set-output name=firecracker_sha::$(git ls-tree ${{ github.sha }} | grep firecracker | awk '{print $3}')"
        echo "::set-output name=virtio_accel_sha::$(git ls-tree ${{ github.sha }} | grep virtio-accel | awk '{print $3}')"

  test:
    needs: prepare
    runs-on: [self-hosted, cloud, "${{ matrix.arch }}" ]
    env:
      NBFC_S3_ACCESS: ${{ secrets.AWS_ACCESS_KEY }}
      NBFC_S3_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      VACCELRT_SHA: ${{needs.prepare.outputs.vaccelrt_sha}}
      FIRECRACKER_SHA: ${{ needs.prepare.outputs.firecracker_sha }}
      FIRECRACKER_TYPE: ${{ needs.prepare.outputs.firecracker_build_type }}
      VIRTIO_SHA: ${{ needs.prepare.outputs.virtio_accel_sha }}
      JOB_TYPE: ${{ matrix.build_type }}
      ARCHITECTURE: ${{ matrix.arch }}

    strategy:
      matrix:
        build_type: [Debug, Release]
        arch: [x86_64, aarch64]
      fail-fast: false

    steps:
    - name: Cleanup previous runs
      run: |
        sudo rm -rf ${{ github.workspace }}/*
        sudo rm -rf ${{ github.workspace }}/.??*

    - uses: actions/checkout@v2

    - name: Install packages
      run: |
        sudo apt update && sudo apt install -y \
          subversion coreutils rsync iproute2 libfdt-dev qemu-system-x86-64 parted debootstrap bc udev libssl-dev libelf-dev

    - name: Setup vars
      id: vars
      run: |
        echo "::set-output name=firecracker_build_type::$(echo ${{ matrix.build_type }} | awk '{print tolower($0)}')"
        echo "::set-output name=uid::$(id -u)"
        echo "::set-output name=gid::$(id -g)"

    - name: Fetch vaccelrt
      uses: cloudkernels/minio-download@v2
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        local-path: /github/workspace/artifacts/opt/
        remote-path: nbfc-assets/github/vaccelrt/${{env.VACCELRT_SHA}}/${{env.ARCHITECTURE}}/${{ env.JOB_TYPE }}/opt/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Download go & kata containers
      run: |
        if [[ $ARCHITECTURE == "x86_64" ]]
             then
                export ARCH=amd64
             else
                export ARCH=arm64
             fi
        #wget https://golang.org/dl/go1.15.11.linux-$ARCH.tar.gz
        #sudo tar -zxf go1.15.11.linux-$ARCH.tar.gz -C /usr/local/
        git submodule update --init kata-containers
        git submodule update --init virtio-accel

    - name: Checkout private tools
      uses: actions/checkout@v2
      with:
        repository: nubificus/vaccel-go-runtime
        ref: main
        token: ${{ secrets.NBFC_BUILDER_TOKEN }} # `GitHub_PAT` is a secret that contains your PAT
        path: kata-containers/src/runtime/vendor/github.com/nubificus/vaccel-go-runtime

    - name: Build and install kata-containers
      env:
        GOROOT: /usr/local/go
        GOPATH: /home/runner/go
      run: |
        export PATH=$GOROOT/bin:$PATH
        export PATH=$GOPATH/bin:$PATH
        if [[ $ARCHITECTURE == "x86_64" ]]
             then
                export ARCH=amd64
                export ARCH_KERNEL=x86_64
             else
                export ARCH_KERNEL=arm64
             fi
        cd kata-containers
        make -C src/runtime
        sudo cp src/runtime/containerd-shim-kata-v2 ${{ github.workspace }}/artifacts/opt/bin/
        sudo cp src/runtime/cli/config/configuration-fc.toml ${{ github.workspace }}/artifacts/opt/share/
        cd tools/packaging/kernel
        echo "CONFIG_MODULES=y" > configs/fragments/$ARCH_KERNEL/vaccel.conf
        echo "CONFIG_MODULE_UNLOAD=y" >> configs/fragments/$ARCH_KERNEL/vaccel.conf
        echo "CONFIG_MODULE_SIG=y" >> configs/fragments/$ARCH_KERNEL/vaccel.conf
        VERSION=`./build-kernel.sh setup 2>&1 |grep Kernel\ version\: | awk '{print $4}'`
        ./build-kernel.sh build
        if [[ $ARCHITECTURE == "x86_64" ]]
        then
                sudo cp kata-linux*/vmlinux ${{ github.workspace }}/artifacts/opt/share/vmlinux-kata-fc
        else
                sudo cp kata-linux*/arch/arm64/boot/Image ${{ github.workspace }}/artifacts/opt/share/vmlinux-kata-fc
        fi
        cd ${{ github.workspace }}/virtio-accel
        git checkout fix_kzfree
        KDIR=${{ github.workspace }}/kata-containers/tools/packaging/kernel/kata-linux*/ make ZC=0 ARCH=$ARCH_KERNEL
        sudo cp virtio_accel.ko ${{ github.workspace }}/artifacts/opt/share/virtio_accel-kata.ko
        if [[ $ARCHITECTURE == "x86_64" ]]
        then
                cd ${{ github.workspace }}/kata-containers/tools/osbuilder/rootfs-builder/
                export ROOTFS_DIR=$PWD/rootfs
                rm -rf $ROOTFS_DIR
                script -fec 'sudo su root -c ". /opt/cargo/env && GOPATH=$GOPATH GOROOT=$GOROOT PATH=$GOROOT/bin:$PATH RUSTUP_HOME=/opt/rust CARGO_HOME=/opt/cargo PATH=/opt/cargo/bin:$PATH ./rootfs.sh -r $ROOTFS_DIR ubuntu"'
                MODULES_DIR=${ROOTFS_DIR}/lib/modules/$VERSION
                sudo mkdir -p ${MODULES_DIR}
                sudo cp ${{ github.workspace }}/virtio-accel/virtio_accel.ko $MODULES_DIR
                sudo touch ${MODULES_DIR}/modules.builtin
                sudo touch ${MODULES_DIR}/modules.order
                sudo chroot ${ROOTFS_DIR} /sbin/depmod $VERSION
                cd ../image-builder
                script -fec 'sudo bash -x ./image_builder.sh $ROOTFS_DIR'
                sudo cp kata-containers.img ${{ github.workspace }}/artifacts/opt/share/
        fi

    - name: Fetch Firecracker
      uses: cloudkernels/minio-download@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/firecracker/${{ env.FIRECRACKER_SHA }}/${{env.ARCHITECTURE}}/${{ steps.vars.outputs.firecracker_build_type }}/firecracker
        local-path: /github/workspace/artifacts/opt/bin/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Fetch vmlinux
      uses: cloudkernels/minio-download@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/virtio-accel/${{ env.VIRTIO_SHA }}/${{env.ARCHITECTURE}}/linux/vmlinux
        local-path: /github/workspace/artifacts/opt/share/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Fetch virtio module
      uses: cloudkernels/minio-download@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/virtio-accel/${{ env.VIRTIO_SHA }}/${{env.ARCHITECTURE}}/linux/virtio_accel.ko
        local-path: /github/workspace/artifacts/opt/share/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Create rootfs
      run: |
        # We need this because downloading from s3 messes up with
        # file permissions
        chmod u+x ${{ github.workspace }}/artifacts/opt/bin/*
        ./scripts/build_rootfs.sh \
                --build_dir /tmp/rootfs_build \
                --install_prefix ${{ github.workspace }}/artifacts/opt \
                --base_image "ubuntu:latest" \
                --dockerfiles_path "$(pwd)/dockerfiles"

    - name: Fetch imagenet models
      uses: cloudkernels/minio-download@v2
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: imagenet/networks/
        local-path: /github/workspace/artifacts/opt/share/networks

    - name: Create tap interface
      run: sudo ./scripts/create_tap.sh tapTestFc 172.42.0.1/24

    - name: Launch Firecracker
      working-directory: ${{ github.workspace }}/artifacts/opt
      run: |
        sudo rm -f /usr/local/share/imagenet-models/networks fc.sock
        sudo mkdir -p /usr/local/share/imagenet-models
        sudo chmod a+rw /usr/local/share/imagenet-models
        ln -s ${{ github.workspace }}/artifacts/opt/share/networks /usr/local/share/imagenet-models/networks
        sudo VACCEL_BACKENDS=${{ github.workspace }}/artifacts/opt/lib/libvaccel-noop.so \
          LD_LIBRARY_PATH=${{ github.workspace }}/artifacts/opt/lib:/usr/local/lib:/usr/lib \
          VACCEL_DEBUG_LEVEL=4 \
          ./bin/firecracker \
            --api-sock fc.sock \
            --config-file ${{ github.workspace }}/conf/config_vaccel.json \
            --seccomp-level 0 &

    - name: Test Firecracker is up
      run: ping -c 20 172.42.0.2

    - name: Test Firecracker ssh
      timeout-minutes: 2
      shell: bash {0}
      run: |
        while true
        do
          name=$(ssh -o StrictHostKeyChecking=no -i artifacts/opt/share/fc_test root@172.42.0.2 hostname -s)
          if [[ $name == "vaccel-guest" ]]; then exit 0; fi
        done
        exit 1

    - name: Test virtio-accel
      run: ./scripts/test_virtio.sh -i ${{ github.workspace }}/artifacts/opt/share/fc_test

    - name: Checkout private tools
      uses: actions/checkout@v2
      with:
        repository: cloudkernels/vaccelrt-agent
        ref: master
        token: ${{ secrets.NBFC_BUILDER_TOKEN }} # `GitHub_PAT` is a secret that contains your PAT
        path: vaccelrt-agent

    - name: Cargo hack
      run: |
        sudo chmod a+w /opt/cargo -R

    - name: Build and install agent
      working-directory: ${{ github.workspace }}/vaccelrt-agent
      env:
        PKG_CONFIG_PATH: ${{ github.workspace }}/artifacts/opt/share/
      run: |
        sudo cp -r ${{ github.workspace }}/artifacts/opt/include/* /usr/include/
        sudo cp ${{ github.workspace }}/artifacts/opt/lib/* /usr/lib/
        cargo install --path .

    - name: Test vsock plugin
      run: ./scripts/test_vsock.sh -i ${{ github.workspace }}/artifacts/opt/share/fc_test -p ${{ github.workspace }}/artifacts/opt/lib/libvaccel-noop.so

    - name: Pack latest release
      if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      working-directory: ${{ github.workspace }}/artifacts/opt
      run: |
        cp ${{github.workspace}}/conf/{config_virtio_accel.json,config_vsock.json} share/
        cp /opt/cargo/bin/vaccelrt-agent bin/
        zip -r ${{github.workspace}}/vaccel_${{matrix.arch}}_${{matrix.build_type}}.zip bin/ include/ lib/ \
          share/config_virtio_accel.json share/config_vsock.json \
          share/rootfs.img share/virtio_accel.ko share/vmlinux \
          share/kata-containers.img share/virtio_accel-kata.ko share/vmlinux-kata-fc \
          share/configuration-fc.toml \
          share/vaccel.pc

    - name: Extract branch name
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${{ github.head_ref }})"
      id: extract_branch


    - name: Upload latest master release to s3
      if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: cloudkernels/minio-upload@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/vaccel/${{ steps.extract_branch.outputs.branch }}/${{env.ARCHITECTURE}}/${{env.JOB_TYPE}}/
        local-path: /github/workspace/vaccel_${{matrix.arch}}_${{matrix.build_type}}.zip

    - name: Cleanup run
      if: ${{ always() }}
      #if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        sudo rm -rf ${{ github.workspace }}/*
        sudo rm -rf ${{ github.workspace }}/.??*
        sudo rm -f /tmp/vaccel.sock*
        fc_pid=$(ps aux | grep -m 1 [f]irecracker | awk '{print $2}')
        while true
        do
          fc_pid=$(ps aux | grep -m 1 [f]irecracker | awk '{print $2}')
          if [[ $fc_pid == "" ]]; then break; fi
          echo "Killing Firecracker (pid: $fc_pid)"
          sudo kill -9 $fc_pid
          # Wait for it to actually die
          sleep 2
        done
        sudo ip tuntap del tapTestFc mode tap

  update_latest_release:
    needs: test
    runs-on: [self-hosted]
    env:
      NBFC_S3_ACCESS: ${{ secrets.AWS_ACCESS_KEY }}
      NBFC_S3_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:

    - name: Setup vars
      id: vars
      run: |
        echo "::set-output name=uid::$(id -u)"
        echo "::set-output name=gid::$(id -g)"

    - name: Extract branch name
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${{ github.head_ref }})"
      id: extract_branch


    - name: Download artifacts
      if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: cloudkernels/minio-download@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/vaccel/${{ steps.extract_branch.outputs.branch }}/
        local-path: /github/workspace/master/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}
        
    - name: Update the release
      if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: ${{ steps.extract_branch.outputs.branch }}
        prerelease: true
        title: "Latest ${{ steps.extract_branch.outputs.branch }} build"
        files: |
          master/vaccel_x86_64_Debug.zip
          master/vaccel_x86_64_Release.zip
          master/vaccel_aarch64_Debug.zip
          master/vaccel_aarch64_Release.zip
