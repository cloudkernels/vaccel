name: Test e2e Pull Request

on: [pull_request]

jobs:
  prepare:
    runs-on: [self-hosted, gpu]
    outputs:
      vaccelrt_sha: ${{ steps.vars.outputs.vaccelrt_sha }}
      firecracker_sha: ${{ steps.vars.outputs.firecracker_sha }}
      virtio_accel_sha: ${{ steps.vars.outputs.virtio_accel_sha }}

    strategy:
      matrix:
        build_type: [Debug, Release]

    steps:
    - uses: actions/checkout@v2

    - name: Setup vars
      id: vars
      run: |
        echo "::set-output name=vaccelrt_sha::$(git ls-tree ${{ github.sha }} | grep vaccelrt | awk '{print $3}')"
        echo "::set-output name=firecracker_sha::$(git ls-tree ${{ github.sha }} | grep firecracker | awk '{print $3}')"
        echo "::set-output name=virtio_accel_sha::$(git ls-tree ${{ github.sha }} | grep virtio-accel | awk '{print $3}')"

  test:
    needs: prepare
    runs-on: [self-hosted, gpu]
    env:
      NBFC_S3_ACCESS: ${{ secrets.AWS_ACCESS_KEY }}
      NBFC_S3_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      VACCELRT_SHA: ${{needs.prepare.outputs.vaccelrt_sha}}
      FIRECRACKER_SHA: ${{ needs.prepare.outputs.firecracker_sha }}
      FIRECRACKER_TYPE: ${{ needs.prepare.outputs.firecracker_build_type }}
      VIRTIO_SHA: ${{ needs.prepare.outputs.virtio_accel_sha }}
      JOB_TYPE: ${{ matrix.build_type }}

    strategy:
      matrix:
        build_type: [Debug, Release]

    steps:
    - uses: actions/checkout@v2

    - name: Install packages
      run: |
        sudo apt update && sudo apt install -y \
          subversion coreutils

    - name: Setup vars
      id: vars
      run: |
        echo "::set-output name=firecracker_build_type::$(echo ${{ matrix.build_type }} | awk '{print tolower($0)}')"
        echo "::set-output name=uid::$(id -u)"
        echo "::set-output name=gid::$(id -g)"

    - name: Fetch vaccelrt
      uses: cloudkernels/minio-download@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        local-path: /github/workspace
        remote-path: nbfc-assets/github/vaccelrt/${{env.VACCELRT_SHA}}/${{ env.JOB_TYPE }}/opt
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}


    - name: Fetch Firecracker
      uses: cloudkernels/minio-download@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/firecracker/${{ env.FIRECRACKER_SHA }}/${{ steps.vars.outputs.firecracker_build_type }}/firecracker
        local-path: /github/workspace/opt/bin/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Fetch vmlinux
      uses: cloudkernels/minio-download@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/virtio-accel/${{ env.VIRTIO_SHA }}/linux/vmlinux
        local-path: /github/workspace/opt/share/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Fetch virtio module
      uses: cloudkernels/minio-download@master
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ env.NBFC_S3_ACCESS }}
        secret-key: ${{ env.NBFC_S3_SECRET }}
        remote-path: nbfc-assets/github/virtio-accel/${{ env.VIRTIO_SHA }}/linux/virtio_accel.ko
        local-path: /github/workspace/opt/share/
      env:
        ACTION_UID: ${{ steps.vars.outputs.uid }}
        ACTION_GID: ${{ steps.vars.outputs.gid }}

    - name: Create rootfs
      run: |
        ls -lah ${{github.workspace}}/opt/bin/*
        chmod u+x ${{ github.workspace }}/opt/bin/*
        ./scripts/build_rootfs.sh \
                --build_dir /tmp/rootfs_build \
                --install_prefix ${{ github.workspace }}/opt \
                --base_image "ubuntu:latest" \
                --dockerfiles_path "$(pwd)/dockerfiles"

    - name: Fetch imagenet models
      run: |
        mkdir -p ${{ github.workspace }}/opt/share/networks
        ./scripts/download-models.sh NO ${{ github.workspace }}/opt/share/networks

    - name: Create tap interface
      run: sudo ./scripts/create_tap.sh tapTestFc 172.42.0.1/24

    - name: Launch Firecracker
      working-directory: ${{ github.workspace }}/opt
      env:
        LD_LIBRARY_PATH: ${{ github.workspace }}/opt/lib:/usr/local/lib:/usr/lib
        VACCEL_BACKENDS: ${{ github.workspace }}/opt/lib/libvaccel-jetson.so
      run: |
        sudo rm -f /usr/local/share/imagenet-models/networks fc.sock
        sudo mkdir -p /usr/local/share/imagenet-models
        sudo chmod a+rw /usr/local/share/imagenet-models
        ln -s ${{ github.workspace }}/opt/share/networks /usr/local/share/imagenet-models/networks
        export VACCEL_BACKENDS=${{ github.workspace }}/opt/lib/libvaccel-jetson.so
        nohup ./bin/firecracker \
          --api-sock fc.sock \
          --config-file ../conf/config_vaccel.json \
          --seccomp-level 0 &

    - name: Test Firecracker is up
      run: ping -c 20 172.42.0.2

    - name: Run classification
      run: |
        timeout 500 /bin/bash -c "until ssh -o StrictHostKeyChecking=no -i ${{ github.workspace }}/opt/share/fc_test root@172.42.0.2 LD_LIBRARY_PATH=/opt/vaccel/lib VACCEL_BACKENDS=/opt/vaccel/lib/libvaccel-virtio.so /opt/vaccel/bin/classify /root/images/dog_0.jpg 1 ; do sleep 2 ; done"

    - name: Cleanup
      run: rm -rf ${{ github.workspace }}/*
